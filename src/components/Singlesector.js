import React, { Component } from 'react'
import Navbar from './Navbar'
import axios from 'axios'
import moment from 'moment'
import Maps from '../components/Landing/Maps'
import sensorImage from '../img/sensor.png';
import { NavLink } from 'react-router-dom'

class Singlesector extends Component {
    state = {
        sectorData: null,
        value: null,
        selected: false,
    }

    componentDidMount() {
        this.getData()
    }

    componentWillUpdate() {
        const { selected, value } = this.state

        if (selected && value) {
            this.setState({
                selected: false
            })
        }

    }


    getData = async () => {
        let res = await axios.get('https://smartcity-parking-api.herokuapp.com/sectors')
        const sectors = await res.data.data
        const sectorsLinks = await Promise.all(sectors.map(sector => axios.get(sector.self_links.detail)))

        this.setState({
            sectorData: sectorsLinks
        })
    }

    handleChange = ({ target }) => {
        this.setState({
            value: target.value,

        })
    }


    handleSubmit = (e) => {
        e.preventDefault()
        if (this.state.value) {
            this.setState({
                selected: true
            })
        }
    }

    render() {
        const { sectorData, value, selected } = this.state
        let content, loadedContent

        if (sectorData != null) {
            content =
                <div className="columns">
                    <div className="column">
                        <div className="field">
                            <label className="label">Subject</label>
                            <div className="field is-grouped">
                                <div className="control">
                                    <div className="select is-large">
                                        <select onChange={this.handleChange}>
                                            <option hidden disabled selected value> Select a sector </option>
                                            {sectorData.map((sector, i) => {
                                                return <option value={i}>Sector id: {sector.data.data.sector_data.sector_id}</option>
                                            })}
                                        </select>
                                    </div>
                                </div>
                                <form onSubmit={this.handleSubmit}>
                                    <button type='submit' className="button is-link is-large">Select this sector</button>
                                </form>
                            </div>

                        </div>
                    </div>
                    <div className="column">
                        <code>beep boop</code>
                    </div>
                </div>

        } else {
            content = <p>Wait till content is loaded</p>
        }

        if (selected) {

            loadedContent = <div className='content'>
                <h2>{sectorData[value].data.data.sector_data.occupance_percentage}</h2>
                <div className="columns">
                    <div className="column is-half">
                        <article className="message is-primary">
                            <div className="message-header">
                                <p>Parking data generated by cluster {sectorData[value].data.data.sector_data.sector_id}</p>
                            </div>
                            <div className="message-body">
                                <div className='list is-size-4'>
                                    <span className="list-item">Current occupation percentage: <span className="has-text-weight-bold"> {sectorData[value].data.data.sector_data.occupance_percentage * 100}</span></span>
                                    <span className="list-item">Last measurement: {moment.unix(sectorData[value].data.data.sector_data.timestamp).calendar()}</span>
                                </div>
                            </div>
                        </article>
                        <div className="columns is-multiline">
                            {sectorData[value].data.data.sensors.map((sensor, i) => {
                                let messageClass
                                if (sensor.parked) {
                                    messageClass = 'message is-success'
                                } else {
                                    messageClass = 'message is-danger'
                                }
                                return <div className="column is-one-third">
                                    <article className={messageClass}>
                                        <div className="message-header">
                                            <p>{sensor.id}</p>
                                        </div>
                                        <div className="message-body">
                                            <img src={sensorImage}></img>
                                        </div>
                                    </article>
                                </div>
                            })}                            
                        </div>

                    </div>
                    <div className="column">
                        <div style={{
                            width: "100%", height: 500, marginLeft: 0, position: 'relative'
                        }}>
                            <Maps loading={'false'} />
                        </div>
                        <h2>Load the data of this sector via the following url:</h2>
                        <code>https://smartcity-parking-api.herokuapp.com/sector/{value}</code>

                    </div>


                </div>
            </div>
        }
        return <div className='page'>
            <Navbar />
            <div className="container">
                <div className="content">
                    <section className="section">
                        <h1 className="title is-size-1">Single sector</h1>
                        {content}

                        <hr></hr>

                        {loadedContent}
                    </section>
                </div>
            </div>
        </div>




    }
}

export default Singlesector